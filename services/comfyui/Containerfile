# syntax=docker/dockerfile:1
FROM docker.io/nvidia/cuda:12.9.1-devel-ubi9 AS builder
ARG COMFYUI_TAG=v0.3.65
ENV PYTHON_VERSION=3.12
ENV ROOT=/comfyui
ENV VENV_PATH=/opt/venv
ENV PATH="/root/.local/bin:${VENV_PATH}/bin:${PATH}"

RUN set -eux \
    && dnf update -y \
    && dnf install -y git python3.12 python3.12-devel python3.12-pip python3.12-wheel python3.12-setuptools ninja-build \
    && curl -LsSf https://astral.sh/uv/install.sh | sh \
    && uv venv -p ${PYTHON_VERSION} ${VENV_PATH}

RUN set -eux \
    # ComfyUI-Manager をクローン,　依存関係をインストール
    && git clone https://github.com/comfyanonymous/ComfyUI.git ${ROOT} \
    && cd ${ROOT} \
    && git checkout tags/${COMFYUI_TAG} \
    && sed -i 's/^torch$/torch==2.7.1/' requirements.txt \
    && uv pip install -r requirements.txt

RUN set -eux \
    # ComfyUI-Manager をクローン,　依存関係をインストール
    && git clone -b main --depth 1 https://github.com/ltdrdata/ComfyUI-Manager.git ${ROOT}/custom_nodes/ComfyUI-Manager \
    && cd ${ROOT}/custom_nodes/ComfyUI-Manager \
    && git pull --force origin main \
    && uv pip install -r requirements.txt

RUN set -eux \
    # ComfyUI_essentials をクローン,　依存関係をインストール
    && git clone -b main --depth 1 https://github.com/cubiq/ComfyUI_essentials.git ${ROOT}/custom_nodes/ComfyUI-essentials \
    && cd ${ROOT}/custom_nodes/ComfyUI-essentials \
    && git pull --force origin main \
    && uv pip install -r requirements.txt

RUN set -eux \
    # ComfyUI-Hunyuan3DWrapper をクローン,　依存関係をインストール
    && git clone -b main --depth 1 https://github.com/kijai/ComfyUI-Hunyuan3DWrapper.git ${ROOT}/custom_nodes/ComfyUI-Hunyuan3DWrapper \
    && cd ${ROOT}/custom_nodes/ComfyUI-Hunyuan3DWrapper \
    && git pull --force origin main \
    && uv pip install -r requirements.txt \
    # Rasterizer, to build and install
    && cd ${ROOT}/custom_nodes/ComfyUI-Hunyuan3DWrapper/hy3dgen/texgen/custom_rasterizer \
    && uv pip install --no-build-isolation . \
    # For the mesh_processor extension install
    && cd ${ROOT}/custom_nodes/ComfyUI-Hunyuan3DWrapper/hy3dgen/texgen/differentiable_renderer \
    && uv pip install --no-build-isolation . \
    # Boundary Preserving Transform install
    && cd ${ROOT}/custom_nodes/ComfyUI-Hunyuan3DWrapper/hy3dgen/shapegen/bpt \
    && uv pip install -r requirements.txt

RUN set -eux \
    # Xatlas Upgrade
    && cd /tmp \
    && uv pip uninstall xatlas \
    && git clone --recursive https://github.com/mworchel/xatlas-python.git \
    && cd ./xatlas-python/extern \
    && rm -rf xatlas \
    && git clone --recursive https://github.com/jpcy/xatlas.git \
    && cd ./xatlas/source/xatlas \
    # 6774行目の「#if 0」を「//#if 0」に
    && sed -i '6774s/^#if 0$/\/\/#if 0/' xatlas.cpp \
    # 6778行目の「#endif」を「//#endif」に
    && sed -i '6778s/^#endif$/\/\/#endif/' xatlas.cpp \
    && cd /tmp/xatlas-python/ \
    && uv pip install .

FROM docker.io/nvidia/cuda:12.9.1-runtime-ubi9
ENV ROOT=/comfyui
ENV VENV_PATH=/opt/venv
ENV PATH="/root/.local/bin:${VENV_PATH}/bin:${PATH}"
COPY --from=builder ${VENV_PATH} ${VENV_PATH}
COPY --from=builder ${ROOT} ${ROOT}

RUN set -eux \
    && dnf update -y \
    && dnf install -y git python3.12 python3.12-pip mesa-libGL mesa-libGLU libglvnd \
    && dnf clean all

WORKDIR ${ROOT}
COPY . /docker/
RUN chmod u+x /docker/entrypoint.sh \
    && cp /docker/extra_model_paths.yaml ${ROOT}

ENV NVIDIA_VISIBLE_DEVICES=all PYTHONPATH="${PYTHONPATH}:${PWD}" CLI_ARGS=""
EXPOSE 8888
ENTRYPOINT ["/docker/entrypoint.sh"]
CMD python3 -u main.py --listen --port 8888 ${CLI_ARGS}
